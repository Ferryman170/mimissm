<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!--接管了mybatis框架的配置-->
    <!--读取jdbc.properties属性文件 -->
    <!--classpath：编译之后在资源的根目录下找属性文件，target->classes类路径下-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!--创建数据源，使用数据库连接池（druid），设置相关参数-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--创建SqlSessionFactoryBean-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置数据源，ref引用上文创建好的dataSource，把dataSource注入当前的SqlSessionFactoryBean类的成员变量-->
        <property name="dataSource" ref="dataSource"></property>

        <!--配置MyBatis的核心配置文件 -->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"></property>

        <!--配置实体类——起个别名-->
        <property name="typeAliasesPackage" value="com.my.pojo"></property>
    </bean>
    <!--创建mapper文件的扫描器——找到包，包下所有配置文件一次性配置-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.my.mapper"></property>
    </bean>
</beans>